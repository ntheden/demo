import 'dart:core';

// Code generated by https://zzzcode.ai/code-generator?id=74fd2633-4e4c-4c5a-a1ee-34170be0d9b7

class Url {
  late final String url;

  Url(this.url);

  @override
  String toString() {
    return (StringBuffer(protocol ?? "")
            ..write(protocol != null ? "://" : "")
            ..write(domain)
            ..write(port != null ? ":$port" : "")
            ..write(path ?? "")
            //..write(filename ?? "")
            ..write(parameters ?? "")
          ).toString();
  }

  String? get protocol {
    RegExp protocolRegex = RegExp(r'^([a-z]+):\/\/');
    Match? match = protocolRegex.firstMatch(url);
    return match?.group(1);
  }

  String? get domain {
    RegExp domainRegex = RegExp(r'^(?:[a-z]+:\/\/)?([^\/: ]+)');
    Match? match = domainRegex.firstMatch(url);
    return match?.group(1);
  }

  int? get port {
    RegExp portRegex = RegExp(r'^(?:[a-z]+:\/\/)?[^\/:]+:(\d+)');
    Match? match = portRegex.firstMatch(url);
    return int.tryParse(match?.group(1) ?? '');
  }

  String? get path {
    RegExp pathRegex = RegExp(r'^(?:[a-z]+:\/\/)?[^\/]+(\/[^?#]*)');
    Match? match = pathRegex.firstMatch(url);
    // Workaround: Broken for "ws://192.168.50.144:8081"
    String? str = match?.group(1);
    if (str != null && str.startsWith("//")) {
      return null;
    }
    return str;
  }

  Map<String, String>? get parameters {
    RegExp paramRegex = RegExp(r'\??([^=]+)=([^&]+)');
    Map<String, String> params = {};
    paramRegex.allMatches(url).forEach((match) {
      params[match.group(1)!] = match.group(2)!;
    });
    return params;
  }
}
